# 80端口重定向（唯一的80端口配置）
server {
    server_name monster.unistar.icu;
    listen 80;
    return 301 https://$host$request_uri;
}


server {
    server_name monster.unistar.icu;
    root /var/www/park-check;
    index index.html;

    # SSL 配置
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    
    # SSL 证书（由 Certbot 生成）
    ssl_certificate /etc/letsencrypt/live/monster.unistar.icu/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/monster.unistar.icu/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # 前端优化：静态资源缓存
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|webp|svg|woff|woff2|ttf|eot)$ {
        expires 7d;       # 静态资源缓存7天
        add_header Cache-Control "public";
        access_log off;   # 减少日志开销
    }

    # 前端优化：HTML不缓存（按需调整）
    location ~ \.html$ {
        expires 1h;
        add_header Cache-Control "public";
    }

    # 单页应用（SPA）处理：所有路由指向index.html
    location / {
        try_files $uri $uri/ /index.html;
    }

    # 跨域资源共享（CORS）配置
    location /api {  # 假设API路径为/api
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
        
        # 预检请求处理
        if ($request_method = 'OPTIONS') {
            return 204;
        }
        
        # 反向代理到后端API（示例）
        proxy_pass http://localhost:3000/api/;  # 替换为实际后端地址
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # 安全头信息（强化前端安全）
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";
    add_header Referrer-Policy "no-referrer-when-downgrade";
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-eval' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self' data:";
    
    # HSTS（HTTP严格传输安全）
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";

    # 禁止访问隐藏文件
    location ~ /\.ht {
        deny all;
    }
}